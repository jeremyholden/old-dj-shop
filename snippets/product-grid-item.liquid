<!-- /snippets/product-grid-item.liquid -->
{% comment %}

  This snippet is used to showcase each product during the loop,
  'for product in collection.products' in collection.liquid.

  A liquid variable (grid_item_width) is set just before the this
  snippet is included to change the size of the container.
  Once the variable is set on a page, all future instances of this
  snippet will use that width. Overwrite the variable to adjust this.

  Example
    - assign grid_item_width = 'large--one-quarter medium--one-half'

{% endcomment %}

{% comment %}
  Set the default grid_item_width if no variable is set
{% endcomment %}
{% unless grid_item_width %}
  {% assign grid_item_width = 'large--one-quarter medium--one-half' %}
{% endunless %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

<div class="grid__item {{ grid_item_width }} dg-product-tile">

  {% comment %}
    Link to your product with the 'within: collection' filter for the link to be aware of the collection.
    This allows you to create collection-based navigation on the product page.

    Results of using 'within: collection':
    - Instead of a URL with /products/product-handle
      you would get /collections/collection-handle/products/product-handle

    For more info on navigation within a collection
      - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

  {% endcomment %}
  <script>
    window.BOLD.common.Shopify.saveProduct({{ product.handle | json }}, {{ product.id | json }});
    {%- for variant in product.variants -%} window.BOLD.common.Shopify.saveVariant({{ variant.id | json }}, {product_id: {{ product.id | json }}, price: {{ variant.price | json }}, group_id: '{{variant.metafields.bold_rp.rp_group_id | json }}'}); {%- endfor -%}
  </script>
  <a href="{{ product.url | within: collection }}" class="grid__image">
    <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
  </a>

  <div class="quick-view-wrapper">
    {% include 'product-quick-view' %}
  </div>
  
<span class="stamped-product-reviews-badge" data-id="{{ product.id }}" style="display: block;">{{ product.metafields.stamped.badge }}</span> 

  <p class="h6">
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
  </p>

  <div class="grid__item large--one-whole dg-product-box-buttons">
    <!-- ADD TO CART -->
    <form action="/cart/add" data-productid="{{ product.id }}" method="post" id="AddToCartForm">
<!-- Begin ReCharge code -->
{% if product.available %}{% include 'subscription-product' %}{% endif %}
<!-- End ReCharge code -->

  {% include 'product-customizer' %}
   
      <input type="hidden" name="id" data-productid="{{ product.id }}" value="{{ product.variants.first.id }}">
      <div>
        <button type="submit" name="add" id="AddToCart" class="btn btn--secondary" onclick="dataLayer.push({ 'ecommerce': null });dataLayer.push({
'event': 'add_to_cart',
'ecommerce': {
		'items': [{
		'item_id': '{{ product.id }}',
		'item_name': '{{ product.title | remove: "'" | remove: '"' }}',
		'item_brand': '{{ product.vendor | remove: "'" | remove: '"' }}',
		'item_category': '{{ product.collections[0].title | remove: "'" | remove: '"' }}',
		'item_variant': '{{ product.selected_variant.sku }}',
		'currency': '{{ shop.currency }}',
		'price': '{{ product.price  | times: 0.01}}',
    'quantity': 1
		}]
	}
});">
          <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
        </button>
      </div>  
    </form>
    <div>
      <a href="{{ product.url | within: collection }}" class="btn">{{ 'products.product.more_info' | t }}</a>
    </div>
  </div>
  <!-- <p>
    {% comment %}
      You can show a leading 'from' or 'up to' by checking 'product.price_varies'
      if your variants have different prices.
    {% endcomment %}
    {% if on_sale %}
      {% if product.price_varies %}
        {% assign sale_price = product.price | money %}
        {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
      {% else %}
        <strong>{{ 'products.product.on_sale' | t }}</strong>
        {{ product.price | money }}
      {% endif %}
    {% else %}
      {% if product.price_varies %}
        {% assign price = product.price | money %}
        {{ 'products.general.from_text_html' | t: price: price }}
      {% else %}
        {{ product.price | money }}
      {% endif %}
    {% endif %}
    {% if sold_out %}
      <br><strong>{{ 'products.product.sold_out' | t }}</strong>
    {% endif %}
    {% if on_sale %}
      <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
      <br><s>{{ product.compare_at_price | money }}</s>
    {% endif %}
  </p> -->
</div>
